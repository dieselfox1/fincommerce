import*as t from"@fincommerce/stores/fincommerce/product-data";import*as e from"@fincommerce/stores/fincommerce/cart";import*as r from"@wordpress/interactivity";var a={7860:(t,e,r)=>{r.d(e,{O:()=>u,E:()=>n});var a=r(2833);r.d({},{});const i="I acknowledge that using a private store means my plugin will inevitably break on the next store release.",{state:o}=(0,a.store)("fincommerce",{},{lock:i}),n=(t,e,r,a)=>{let i,n=t;if("variable"===e&&r&&a){const e=((t,e)=>Array.isArray(t)&&Array.isArray(e)&&0!==t.length&&0!==e.length&&t.find((t=>Object.entries(t.attributes).every((([t,r])=>e.some((e=>!(e.attribute!==t)&&(e.value===r||e.value&&""===r)))))))||null)(r,a);e?.variation_id&&(n=e.variation_id,i=o?.products?.[t]?.variations?.[e?.variation_id])}else i=o?.products?.[n];if("object"!=typeof i||null===i)return null;const s="number"==typeof i.min?i.min:1,u="number"==typeof i.max&&i.max>=1?i.max:1/0,c=i.step||1;return{id:n,...i,min:s,max:u,step:c}},s=t=>{const e=(t=>{let e=null;return t.target instanceof HTMLButtonElement&&(e=t.target.parentElement?.querySelector(".qty")),t.target instanceof HTMLInputElement&&(e=t.target),e})(t);if(!e)return;const r=Number(e.value);return{currentValue:isNaN(r)?0:r,inputElement:e}},u=(t,e,r)=>{const a=o.cart?.items.find((e=>{return"variation"===e.type?!(e.id!==t||!e.variation||!r||e.variation.length!==r.length)&&(a=e,i=r,!(!Array.isArray(a.variation)||!Array.isArray(i))&&a.variation.length===i.length&&a.variation.every((({raw_attribute:t,value:e})=>i.some((r=>r.attribute===t&&(r.value.toLowerCase()===e.toLowerCase()||r.value&&""===e)))))):e.id===t;var a,i}));return(a?.quantity||0)+e},c=t=>{const e=new Event("change",{bubbles:!0});t.dispatchEvent(e)},{actions:d,state:l}=(0,a.store)("fincommerce/add-to-cart-with-options",{state:{noticeIds:[],get validationErrors(){const t=(0,a.getContext)();return t&&t.validationErrors?t.validationErrors:[]},get isFormValid(){return 0===l.validationErrors.length},get allowsDecrease(){const{quantity:t,childProductId:e,productType:r,productId:i,availableVariations:o,selectedAttributes:s}=(0,a.getContext)();if("grouped"===r&&t[e]>0)return!0;const u=n(e||i,r,o,s);if(!u)return!0;const{id:c,min:d,step:l}=u;return(t[c]||0)-l>=d},get allowsIncrease(){const{quantity:t,childProductId:e,productType:r,productId:i,availableVariations:o,selectedAttributes:s}=(0,a.getContext)(),u=n(e||i,r,o,s);if(!u)return!0;const{id:c,max:d,step:l}=u;return(t[c]||0)+l<=d}},actions:{validateQuantity(t){if(d.clearErrors("invalid-quantities"),"number"!=typeof t)return;const e=(0,a.getContext)(),{variationId:r}=l,i=r||e.productId,o=n(i,e.productType,e.availableVariations,e.selectedAttributes);if(0===t||o&&(t<o.min||t>o.max)){const{errorMessages:t}=(0,a.getConfig)();d.addError({code:"invalidQuantities",message:t?.invalidQuantities||"",group:"invalid-quantities"})}},setQuantity(t){const e=(0,a.getContext)();if("variable"===e.productType)e.availableVariations.map((t=>t.variation_id)).forEach((r=>{e.quantity[r]=t}));else{const r=e.childProductId||e.productId;e.quantity={...e.quantity,[r]:t}}d.validateQuantity(t)},addError:t=>{const{validationErrors:e}=l;return e.push(t),t.code},clearErrors:t=>{const{validationErrors:e}=l;if(t){const r=e.filter((e=>e.group!==t));e.splice(0,e.length,...r)}else e.length=0},increaseQuantity:t=>{const e=s(t);if(!e)return;const{currentValue:r,inputElement:i}=e,{childProductId:o,productType:u,productId:l,availableVariations:m,selectedAttributes:p}=(0,a.getContext)(),v=n(o||l,u,m,p);if(!v)return;const{max:g,min:y,step:b}=v,f=r+b;if(f<=g){const t=Math.max(y,f);d.setQuantity(t),i.value=t.toString(),c(i)}},decreaseQuantity:t=>{const e=s(t);if(!e)return;const{currentValue:r,inputElement:i}=e,{childProductId:o,productType:u,productId:l,availableVariations:m,selectedAttributes:p}=(0,a.getContext)(),v=n(o||l,u,m,p);if(!v)return;const{min:g,step:y}=v;let b=r-y;"grouped"===u&&b<g&&(b=r>g?g:0),b!==r&&(d.setQuantity(b),i.value=b.toString(),c(i))},handleQuantityInput:t=>{const e=s(t);if(!e)return;const{currentValue:r}=e;d.setQuantity(r)},handleQuantityBlur:t=>{const{childProductId:e,productType:r,productId:i,availableVariations:o,selectedAttributes:s}=(0,a.getContext)();if((Number.isNaN(t.target.valueAsNumber)||0===t.target.valueAsNumber)&&"grouped"===r)return d.setQuantity(0),Number.isNaN(t.target.valueAsNumber)&&(t.target.value=""),void c(t.target);const u=n(e||i,r,o,s);if(!u)return;const{min:l}=u,m=Number.isFinite(t.target.valueAsNumber)&&t.target.valueAsNumber>0?t.target.valueAsNumber:l;t.target.value!==m.toString()&&(d.setQuantity(m),t.target.value=m.toString(),c(t.target))},handleQuantityCheckboxChange:t=>{const e=s(t);if(!e)return;const{inputElement:r}=e;d.setQuantity(r.checked?1:0)},*addToCart(){yield Promise.resolve().then(r.bind(r,1401));const{productId:t,quantity:e,selectedAttributes:o,productType:n}=(0,a.getContext)(),{variationId:s}=l,c=s||t,d=u(c,e[c],o),{actions:m}=(0,a.store)("fincommerce",{},{lock:i});yield m.addCartItem({id:c,quantity:d,variation:o,type:n})},*handleSubmit(t){t.preventDefault();const{isFormValid:e}=l;if(e)yield d.addToCart();else{yield Promise.resolve().then(r.bind(r,7908));const{actions:t}=(0,a.store)("fincommerce/store-notices",{},{lock:i}),{noticeIds:e,validationErrors:o}=l;e.forEach((e=>{t.removeNotice(e)})),e.splice(0,e.length);const n=o.map((e=>t.addNotice({notice:e.message,type:"error",dismissible:!0})));e.push(...n)}}}},{lock:i})},7908:t=>{t.exports=import("@fincommerce/stores/store-notices")},1401:t=>{t.exports=e},2833:(t,e,a)=>{var i,o;t.exports=(i={getConfig:()=>r.getConfig,getContext:()=>r.getContext,store:()=>r.store},o={},a.d(o,i),o)}},i={};function o(t){var e=i[t];if(void 0!==e)return e.exports;var r=i[t]={exports:{}};return a[t](r,r.exports,o),r.exports}o.d=(t,e)=>{for(var r in e)o.o(e,r)&&!o.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var n=o(2833),s=o(7860);const u="I acknowledge that using a private store means my plugin will inevitably break on the next store release.",{actions:c}=(0,n.store)("fincommerce/add-to-cart-with-options",{actions:{validateQuantity(){c.clearErrors("invalid-quantities");const{errorMessages:t}=(0,n.getConfig)(),e=(0,n.getContext)();Object.values(e.quantity).some((t=>t>0))?Object.entries(e.quantity).some((([t,r])=>{var a,i;const o=(0,s.E)(Number(t),e.productType,e.availableVariations,e.selectedAttributes);return 0!==r&&(r<(null!==(a=o?.min)&&void 0!==a?a:0)||r>(null!==(i=o?.max)&&void 0!==i?i:1/0))}))&&c.addError({code:"invalidQuantities",message:t?.invalidQuantities||"",group:"invalid-quantities"}):c.addError({code:"groupedProductAddToCartMissingItems",message:t?.groupedProductAddToCartMissingItems||"",group:"invalid-quantities"})},*addToCart(){yield Promise.resolve().then(o.bind(o,1401));const{quantity:t,selectedAttributes:e,productType:r,groupedProductIds:a}=(0,n.getContext)(),i=[];for(const o of a){if(0===t[o])continue;const a=(0,s.O)(o,t[o]);i.push({id:o,quantity:a,variation:e,type:r})}const{actions:c}=(0,n.store)("fincommerce",{},{lock:u});yield c.batchAddCartItems(i)}},callbacks:{validateQuantities(){c.validateQuantity()}}},{lock:u});