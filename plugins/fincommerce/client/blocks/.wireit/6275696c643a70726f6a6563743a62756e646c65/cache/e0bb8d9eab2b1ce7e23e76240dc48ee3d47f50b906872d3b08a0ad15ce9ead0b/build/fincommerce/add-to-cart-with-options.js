import*as t from"@fincommerce/stores/fincommerce/cart";import*as e from"@wordpress/interactivity";import*as r from"@fincommerce/stores/fincommerce/product-data";var a={7908:t=>{t.exports=import("@fincommerce/stores/store-notices")},1401:e=>{e.exports=t},2833:(t,r,a)=>{var o,i;t.exports=(o={getConfig:()=>e.getConfig,getContext:()=>e.getContext,store:()=>e.store},i={},a.d(i,o),i)}},o={};function i(t){var e=o[t];if(void 0!==e)return e.exports;var r=o[t]={exports:{}};return a[t](r,r.exports,i),r.exports}i.d=(t,e)=>{for(var r in e)i.o(e,r)&&!i.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var n={};i.d(n,{O:()=>p,E:()=>l});var s=i(2833);i.d({},{});const u="I acknowledge that using a private store means my plugin will inevitably break on the next store release.",{state:c}=(0,s.store)("fincommerce",{},{lock:u}),l=(t,e,r,a)=>{let o,i=t;if("variable"===e&&r&&a){const e=((t,e)=>Array.isArray(t)&&Array.isArray(e)&&0!==t.length&&0!==e.length&&t.find((t=>Object.entries(t.attributes).every((([t,r])=>e.some((e=>!(e.attribute!==t)&&(e.value===r||e.value&&""===r)))))))||null)(r,a);e?.variation_id&&(i=e.variation_id,o=c?.products?.[t]?.variations?.[e?.variation_id])}else o=c?.products?.[i];if("object"!=typeof o||null===o)return null;const n="number"==typeof o.min?o.min:1,s="number"==typeof o.max&&o.max>=1?o.max:1/0,u=o.step||1;return{id:i,...o,min:n,max:s,step:u}},d=t=>{const e=(t=>{let e=null;return t.target instanceof HTMLButtonElement&&(e=t.target.parentElement?.querySelector(".qty")),t.target instanceof HTMLInputElement&&(e=t.target),e})(t);if(!e)return;const r=Number(e.value);return{currentValue:isNaN(r)?0:r,inputElement:e}},p=(t,e,r)=>{const a=c.cart?.items.find((e=>{return"variation"===e.type?!(e.id!==t||!e.variation||!r||e.variation.length!==r.length)&&(a=e,o=r,!(!Array.isArray(a.variation)||!Array.isArray(o))&&a.variation.length===o.length&&a.variation.every((({raw_attribute:t,value:e})=>o.some((r=>r.attribute===t&&(r.value.toLowerCase()===e.toLowerCase()||r.value&&""===e)))))):e.id===t;var a,o}));return(a?.quantity||0)+e},m=t=>{const e=new Event("change",{bubbles:!0});t.dispatchEvent(e)},{actions:v,state:g}=(0,s.store)("fincommerce/add-to-cart-with-options",{state:{noticeIds:[],get validationErrors(){const t=(0,s.getContext)();return t&&t.validationErrors?t.validationErrors:[]},get isFormValid(){return 0===g.validationErrors.length},get allowsDecrease(){const{quantity:t,childProductId:e,productType:r,productId:a,availableVariations:o,selectedAttributes:i}=(0,s.getContext)();if("grouped"===r&&t[e]>0)return!0;const n=l(e||a,r,o,i);if(!n)return!0;const{id:u,min:c,step:d}=n;return(t[u]||0)-d>=c},get allowsIncrease(){const{quantity:t,childProductId:e,productType:r,productId:a,availableVariations:o,selectedAttributes:i}=(0,s.getContext)(),n=l(e||a,r,o,i);if(!n)return!0;const{id:u,max:c,step:d}=n;return(t[u]||0)+d<=c}},actions:{validateQuantity(t){if(v.clearErrors("invalid-quantities"),"number"!=typeof t)return;const e=(0,s.getContext)(),{variationId:r}=g,a=r||e.productId,o=l(a,e.productType,e.availableVariations,e.selectedAttributes);if(0===t||o&&(t<o.min||t>o.max)){const{errorMessages:t}=(0,s.getConfig)();v.addError({code:"invalidQuantities",message:t?.invalidQuantities||"",group:"invalid-quantities"})}},setQuantity(t){const e=(0,s.getContext)();if("variable"===e.productType)e.availableVariations.map((t=>t.variation_id)).forEach((r=>{e.quantity[r]=t}));else{const r=e.childProductId||e.productId;e.quantity={...e.quantity,[r]:t}}v.validateQuantity(t)},addError:t=>{const{validationErrors:e}=g;return e.push(t),t.code},clearErrors:t=>{const{validationErrors:e}=g;if(t){const r=e.filter((e=>e.group!==t));e.splice(0,e.length,...r)}else e.length=0},increaseQuantity:t=>{const e=d(t);if(!e)return;const{currentValue:r,inputElement:a}=e,{childProductId:o,productType:i,productId:n,availableVariations:u,selectedAttributes:c}=(0,s.getContext)(),p=l(o||n,i,u,c);if(!p)return;const{max:g,min:y,step:b}=p,f=r+b;if(f<=g){const t=Math.max(y,f);v.setQuantity(t),a.value=t.toString(),m(a)}},decreaseQuantity:t=>{const e=d(t);if(!e)return;const{currentValue:r,inputElement:a}=e,{childProductId:o,productType:i,productId:n,availableVariations:u,selectedAttributes:c}=(0,s.getContext)(),p=l(o||n,i,u,c);if(!p)return;const{min:g,step:y}=p;let b=r-y;"grouped"===i&&b<g&&(b=r>g?g:0),b!==r&&(v.setQuantity(b),a.value=b.toString(),m(a))},handleQuantityInput:t=>{const e=d(t);if(!e)return;const{currentValue:r}=e;v.setQuantity(r)},handleQuantityBlur:t=>{const{childProductId:e,productType:r,productId:a,availableVariations:o,selectedAttributes:i}=(0,s.getContext)();if((Number.isNaN(t.target.valueAsNumber)||0===t.target.valueAsNumber)&&"grouped"===r)return v.setQuantity(0),Number.isNaN(t.target.valueAsNumber)&&(t.target.value=""),void m(t.target);const n=l(e||a,r,o,i);if(!n)return;const{min:u}=n,c=Number.isFinite(t.target.valueAsNumber)&&t.target.valueAsNumber>0?t.target.valueAsNumber:u;t.target.value!==c.toString()&&(v.setQuantity(c),t.target.value=c.toString(),m(t.target))},handleQuantityCheckboxChange:t=>{const e=d(t);if(!e)return;const{inputElement:r}=e;v.setQuantity(r.checked?1:0)},*addToCart(){yield Promise.resolve().then(i.bind(i,1401));const{productId:t,quantity:e,selectedAttributes:r,productType:a}=(0,s.getContext)(),{variationId:o}=g,n=o||t,c=p(n,e[n],r),{actions:l}=(0,s.store)("fincommerce",{},{lock:u});yield l.addCartItem({id:n,quantity:c,variation:r,type:a})},*handleSubmit(t){t.preventDefault();const{isFormValid:e}=g;if(e)yield v.addToCart();else{yield Promise.resolve().then(i.bind(i,7908));const{actions:t}=(0,s.store)("fincommerce/store-notices",{},{lock:u}),{noticeIds:e,validationErrors:r}=g;e.forEach((e=>{t.removeNotice(e)})),e.splice(0,e.length);const a=r.map((e=>t.addNotice({notice:e.message,type:"error",dismissible:!0})));e.push(...a)}}}},{lock:u});var y=n.O,b=n.E;export{y as getNewQuantity,b as getProductData};