name: 'Release: Post-release published flows'
on:
  workflow_call:
    inputs:
      release_tag_name:
        description: 'The release tag name'
        required: true
        type: string

jobs:
  # Jobs to run after a pre-release is published (triggered by the "prereleased" GH event).
  generate-release-commits-and-contributors:
    name: 'Call release commits and contributors workflow'
    if: ${{ ( github.event.action == 'prereleased' || ( github.event.action == 'published' && github.event.release.prerelease ) ) &&  contains( inputs.release_tag_name, '-beta' ) }}
    uses: woocommerce/woocommerce/.github/workflows/release-commits-and-contributors.yml@trunk
    with:
      version: ${{ inputs.release_tag_name }}
    secrets: inherit

  # Jobs to run after a final release is published (triggered by the "published" GH event).
  notify-release-published:
    name: 'Notify in Slack when a new (pre)release is published'
    runs-on: ${{ ( github.repository == 'woocommerce/woocommerce' && 'blacksmith-2vcpu-ubuntu-2404' ) || 'ubuntu-latest' }}
    if: ${{ github.event.action == 'published' && ! ( contains( inputs.release_tag_name, '-dev' ) || contains( inputs.release_tag_name, '-rc' ) ) }}
    steps:
      - name: 'Notify to release channel'
        uses: archive/github-actions-slack@a62d71a4ea93e68cbdc37581166b0298bea512e9 # v 2.10.0
        with:
          slack-bot-user-oauth-access-token: ${{ secrets.CODE_FREEZE_BOT_TOKEN }}
          slack-channel: ${{ secrets.WOO_RELEASE_SLACK_CHANNEL }}
          slack-optional-unfurl_links: false
          slack-text: |
            :woo-bounce: *<https://github.com/woocommerce/woocommerce/releases/tag/${{ inputs.release_tag_name }}|WooCommerce ${{ inputs.release_tag_name }}>* has been released! :rocket:
            (<!subteam^S086N376UTS> could you publish the release post? :ty2:)

  update-global-changelog:
    name: 'Update changelog.txt after any stable release'
    runs-on: ${{ ( github.repository == 'woocommerce/woocommerce' && 'blacksmith-2vcpu-ubuntu-2404' ) || 'ubuntu-latest' }}
    if: ${{ github.event.action == 'published' && ! ( contains( inputs.release_tag_name, '-dev' ) || contains( inputs.release_tag_name, '-beta' ) || contains( inputs.release_tag_name, '-rc' ) ) }}
    steps:
      - name: 'Fetch release readme.txt'
        env:
          RELEASE_TAG: ${{ inputs.release_tag_name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: |
          gh release download "$RELEASE_TAG" --pattern 'woocommerce.zip'
          unzip -qq woocommerce.zip

          if [[ ! -e woocommerce/readme.txt ]]; then
            echo "::error::Could not find readme.txt in asset for release '$RELEASE_TAG'."
            exit 1
          fi
      - name: 'Fetch latest changelog.txt and changelog script'
        uses: 'actions/checkout@v4'
        with:
          ref: trunk
          sparse-checkout: |
            /changelog.txt
            /.github/workflows/scripts/release-readme-to-changelog.php
          sparse-checkout-cone-mode: false
          path: trunk
      - name: 'Update changelog.txt'
        run: |
          php ./trunk/.github/workflows/scripts/release-readme-to-changelog.php ./woocommerce/readme.txt ./trunk/changelog.txt
      - name: 'Push changes and open PR'
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          # Configure Git.
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Push new changelog.txt.
          branch_name="update-changelog-${{ inputs.release_tag_name }}-$(date +%s)"
          cd trunk
          git checkout -b "$branch_name"
          git commit \
            --all \
            --message 'Update changelog.txt after release ${{ inputs.release_tag_name }}'
          git push origin "$branch_name"

          # Open a PR.
          gh pr create \
            --title 'Update changelog.txt after ${{ inputs.release_tag_name }}' \
            --body 'This PR updates the global changelog.txt file following the release of version ${{ inputs.release_tag_name }}.' \
            --base trunk \
            --head "$branch_name" \
            --reviewer "${{ github.actor }}"
